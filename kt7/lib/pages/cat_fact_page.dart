import 'package:flutter/material.dart';
import '../models/cat_fact.dart';
import '../services/cat_fact_service.dart';

// –≠–∫—Ä–∞–Ω —Å —Ñ–∞–∫—Ç–æ–º –æ –∫–æ—Ç–∞—Ö
class CatFactPage extends StatefulWidget {
  const CatFactPage({super.key});

  @override
  State<CatFactPage> createState() => _CatFactPageState();
}

class _CatFactPageState extends State<CatFactPage> {
  late Future<CatFact> _catFactFuture;
  final CatFactService _service = CatFactService(); // –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–∞

  @override
  void initState() {
    super.initState();
    _catFactFuture = _service.fetchCatFact(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–∫—Ç –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  }

  void _refreshFact() {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—Ç–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
    setState(() {
      _catFactFuture = _service.fetchCatFact();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('üê± Cat Fact')), // –ó–∞–≥–æ–ª–æ–≤–æ–∫
      body: FutureBuilder<CatFact>(
        future: _catFactFuture,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            // –ó–∞–≥—Ä—É–∑–∫–∞
            return const Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError) {
            // –û—à–∏–±–∫–∞
            return Center(
              child: Text(
                '–û—à–∏–±–∫–∞: ${snapshot.error}',
                style: const TextStyle(color: Colors.red),
              ),
            );
          } else if (!snapshot.hasData) {
            // –ü—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            return const Center(child: Text('No information :('));
          } else {
            // –£—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            final fact = snapshot.data!;
            return Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    fact.fact,
                    style: const TextStyle(fontSize: 20),
                    textAlign: TextAlign.center,
                  ),
                  const SizedBox(height: 20),
                  ElevatedButton.icon(
                    onPressed: _refreshFact, // –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    icon: const Icon(Icons.refresh),
                    label: const Text('Another fact'),
                  ),
                ],
              ),
            );
          }
        },
      ),
    );
  }
}
